name: Ticketify CI

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main, develop]

env:
  MIX_ENV: test
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

jobs:
  quality-checks:
    name: Quality Checks
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        elixir: ['1.15.7']
        otp: ['26.1']

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ticketify_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get --only test

      - name: Check code formatting
        run: mix format --check-formatted

      - name: Check for unused dependencies
        run: mix deps.unlock --check-unused

      - name: Compile code (warnings as errors)
        run: mix compile --warnings-as-errors

      - name: Run Credo static analysis
        run: mix credo --strict

      - name: Run Sobelow security analysis
        run: mix sobelow --skip --private --exit

      - name: Cache Dialyzer PLT
        uses: actions/cache@v3
        with:
          path: priv/plts
          key: ${{ runner.os }}-dialyzer-${{ hashFiles('**/mix.lock') }}-${{ matrix.elixir }}-${{ matrix.otp }}
          restore-keys: |
            ${{ runner.os }}-dialyzer-${{ hashFiles('**/mix.lock') }}-${{ matrix.elixir }}-
            ${{ runner.os }}-dialyzer-${{ hashFiles('**/mix.lock') }}-
            ${{ runner.os }}-dialyzer-

      - name: Run Dialyzer type analysis
        run: mix dialyzer --halt-exit-status

  test:
    name: Test Suite
    runs-on: ubuntu-latest
    needs: quality-checks
    
    strategy:
      matrix:
        elixir: ['1.15.7']
        otp: ['26.1']

    services:
      postgres:
        image: postgres:15
        env:
          POSTGRES_PASSWORD: postgres
          POSTGRES_USER: postgres
          POSTGRES_DB: ticketify_test
        options: >-
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: ${{ matrix.elixir }}
          otp-version: ${{ matrix.otp }}

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Setup database
        run: |
          mix ecto.create
          mix ecto.migrate

      - name: Run tests
        run: mix test --cover

      - name: Generate coverage report
        run: mix test --cover
        if: always()

  docker-build:
    name: Docker Build Test
    runs-on: ubuntu-latest
    needs: [quality-checks, test]
    if: github.event_name == 'pull_request' || github.ref == 'refs/heads/main'

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3

      - name: Build Docker image
        uses: docker/build-push-action@v5
        with:
          context: .
          push: false
          tags: ticketify:test
          cache-from: type=gha
          cache-to: type=gha,mode=max

  security-audit:
    name: Security Audit
    runs-on: ubuntu-latest
    
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Elixir
        uses: erlef/setup-beam@v1
        with:
          elixir-version: '1.15.7'
          otp-version: '26.1'

      - name: Cache dependencies
        uses: actions/cache@v3
        with:
          path: |
            deps
            _build
          key: ${{ runner.os }}-mix-${{ hashFiles('**/mix.lock') }}
          restore-keys: |
            ${{ runner.os }}-mix-

      - name: Install dependencies
        run: |
          mix local.hex --force
          mix local.rebar --force
          mix deps.get

      - name: Run dependency audit
        run: mix deps.audit

      - name: Run Sobelow security scan
        run: mix sobelow --skip --private --exit

  notify:
    name: Notify Status
    runs-on: ubuntu-latest
    needs: [quality-checks, test, docker-build, security-audit]
    if: always()
    
    steps:
      - name: Check job status
        run: |
          if [[ "${{ needs.quality-checks.result }}" == "success" && 
                "${{ needs.test.result }}" == "success" && 
                "${{ needs.docker-build.result }}" == "success" && 
                "${{ needs.security-audit.result }}" == "success" ]]; then
            echo "✅ All CI checks passed!"
            exit 0
          else
            echo "❌ Some CI checks failed:"
            echo "Quality Checks: ${{ needs.quality-checks.result }}"
            echo "Tests: ${{ needs.test.result }}"
            echo "Docker Build: ${{ needs.docker-build.result }}"
            echo "Security Audit: ${{ needs.security-audit.result }}"
            exit 1
          fi
